requires Standard::Math;
requires Standard::Primitives::Numeric;
requires Standard::Primitives::String;

namespace Standard::IO;

// declares are how you expose methods (i.e. 'public' modifier)
declares struct FileReader;
declares function ReadByte(reader FileReader) i8;
declares function ReadAllText(reader FileReader) string;

immutable HELLO_WORLD string = "Hello World!";

struct FileReader
{
    // indicate what interfaces this type implements
    implements IStream, IBuffer;

    immutable DEFAULT_STREAM_POSITION i32 = -1;

    mutable StreamPosition i32 = DEFAULT_STREAM_POSITION;
    immutable Buffer byte[];

    construct(size word)
    {
        StreamPosition = 1;
        Buffer = halloc[size];
    }

    deconstruct()
    {
        StreamPosition = DEFAULT_STREAM_POSITION;
    }
}

function ReadByte(reader FileReader) i8
{
    fails IOFailure, BufferOverflowFailure;

    immutable read = reader.Buffer[reader.StreamPosition];
    mutable reader.StreamPosition += 1;

    return read;

    finally
    {
        deconstruct(reader);
    }
}

